{
  "abi": [
    {
      "inputs": [],
      "name": "InsufficientFeeTokenAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        }
      ],
      "name": "UnsupportedDestinationChain",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "extraArgs",
              "type": "bytes"
            }
          ],
          "internalType": "struct Client.EVM2AnyMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipSend",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "extraArgs",
              "type": "bytes"
            }
          ],
          "internalType": "struct Client.EVM2AnyMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "getSupportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "isChainSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "supported",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "96f4e9f9",
    "getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "20487ded",
    "getSupportedTokens(uint64)": "fbca3b74",
    "isChainSupported(uint64)": "a48a9058"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"returns 0 fee on invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns guaranteed execution fee for the specified message delivery to destination chain\"}},\"getSupportedTokens(uint64)\":{\"params\":{\"chainSelector\":\"The chainSelector.\"},\"returns\":{\"tokens\":\"The addresses of all tokens that are supported.\"}},\"isChainSupported(uint64)\":{\"params\":{\"chainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"getSupportedTokens(uint64)\":{\"notice\":\"Gets a list of all supported tokens which can be sent or received to/from a given chain id.\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x9899fab6a40f68408ddf153612c553f2441ea27770176bf71ccce22c40393286\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00fbdb19d1dc68983c972644b68bff9f2a277d088841444675b3448dc01edbb7\",\"dweb:/ipfs/Qma2PN1vYgDrou5ZN72NfvN5YbdHyxWyeBqM67AuRnvDRs\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcdf688dc96619a256fdbddce1a6ceff0f6c57963be267148abdcfd57616725e\",\"dweb:/ipfs/QmVEF1ZER2V86L8CcMYTqt1VwQ4Xw2pa12pNZbb99UkqRT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientFeeTokenAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMsgValue"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            }
          ],
          "type": "error",
          "name": "UnsupportedDestinationChain"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destinationChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "struct Client.EVM2AnyMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "receiver",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "tokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraArgs",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "ccipSend",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destinationChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "struct Client.EVM2AnyMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "receiver",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "tokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraArgs",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isChainSupported",
          "outputs": [
            {
              "internalType": "bool",
              "name": "supported",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
            "details": "Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.",
            "params": {
              "destinationChainSelector": "The destination chain ID",
              "message": "The cross-chain CCIP message including data and/or tokens"
            },
            "returns": {
              "_0": "messageId The message ID"
            }
          },
          "getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
            "details": "returns 0 fee on invalid message.",
            "params": {
              "destinationChainSelector": "The destination chainSelector",
              "message": "The cross-chain CCIP message including data and/or tokens"
            },
            "returns": {
              "fee": "returns guaranteed execution fee for the specified message delivery to destination chain"
            }
          },
          "getSupportedTokens(uint64)": {
            "params": {
              "chainSelector": "The chainSelector."
            },
            "returns": {
              "tokens": "The addresses of all tokens that are supported."
            }
          },
          "isChainSupported(uint64)": {
            "params": {
              "chainSelector": "The chain to check."
            },
            "returns": {
              "supported": "is true if it is supported, false if not."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
            "notice": "Request a message to be sent to the destination chain"
          },
          "getSupportedTokens(uint64)": {
            "notice": "Gets a list of all supported tokens which can be sent or received to/from a given chain id."
          },
          "isChainSupported(uint64)": {
            "notice": "Checks if the given chain ID is supported for sending/receiving."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": "IRouterClient"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x9899fab6a40f68408ddf153612c553f2441ea27770176bf71ccce22c40393286",
        "urls": [
          "bzz-raw://00fbdb19d1dc68983c972644b68bff9f2a277d088841444675b3448dc01edbb7",
          "dweb:/ipfs/Qma2PN1vYgDrou5ZN72NfvN5YbdHyxWyeBqM67AuRnvDRs"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523",
        "urls": [
          "bzz-raw://fcdf688dc96619a256fdbddce1a6ceff0f6c57963be267148abdcfd57616725e",
          "dweb:/ipfs/QmVEF1ZER2V86L8CcMYTqt1VwQ4Xw2pa12pNZbb99UkqRT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "id": 43469,
    "exportedSymbols": {
      "Client": [
        43525
      ],
      "IRouterClient": [
        43468
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1800:37",
    "nodes": [
      {
        "id": 43418,
        "nodeType": "PragmaDirective",
        "src": "32:23:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 43420,
        "nodeType": "ImportDirective",
        "src": "57:47:37",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "file": "../libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43469,
        "sourceUnit": 43526,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43419,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43525,
              "src": "65:6:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43468,
        "nodeType": "ContractDefinition",
        "src": "106:1725:37",
        "nodes": [
          {
            "id": 43424,
            "nodeType": "ErrorDefinition",
            "src": "134:60:37",
            "nodes": [],
            "errorSelector": "ae236d9c",
            "name": "UnsupportedDestinationChain",
            "nameLocation": "140:27:37",
            "parameters": {
              "id": 43423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43422,
                  "mutability": "mutable",
                  "name": "destChainSelector",
                  "nameLocation": "175:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43424,
                  "src": "168:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 43421,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "168:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "167:26:37"
            }
          },
          {
            "id": 43426,
            "nodeType": "ErrorDefinition",
            "src": "197:35:37",
            "nodes": [],
            "errorSelector": "07da6ee6",
            "name": "InsufficientFeeTokenAmount",
            "nameLocation": "203:26:37",
            "parameters": {
              "id": 43425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:37"
            }
          },
          {
            "id": 43428,
            "nodeType": "ErrorDefinition",
            "src": "235:24:37",
            "nodes": [],
            "errorSelector": "1841b4e1",
            "name": "InvalidMsgValue",
            "nameLocation": "241:15:37",
            "parameters": {
              "id": 43427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:2:37"
            }
          },
          {
            "id": 43436,
            "nodeType": "FunctionDefinition",
            "src": "455:87:37",
            "nodes": [],
            "documentation": {
              "id": 43429,
              "nodeType": "StructuredDocumentation",
              "src": "263:189:37",
              "text": "@notice Checks if the given chain ID is supported for sending/receiving.\n @param chainSelector The chain to check.\n @return supported is true if it is supported, false if not."
            },
            "functionSelector": "a48a9058",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isChainSupported",
            "nameLocation": "464:16:37",
            "parameters": {
              "id": 43432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43431,
                  "mutability": "mutable",
                  "name": "chainSelector",
                  "nameLocation": "488:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43436,
                  "src": "481:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 43430,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:22:37"
            },
            "returnParameters": {
              "id": 43435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43434,
                  "mutability": "mutable",
                  "name": "supported",
                  "nameLocation": "531:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43436,
                  "src": "526:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:16:37"
            },
            "scope": 43468,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43445,
            "nodeType": "FunctionDefinition",
            "src": "773:98:37",
            "nodes": [],
            "documentation": {
              "id": 43437,
              "nodeType": "StructuredDocumentation",
              "src": "546:224:37",
              "text": "@notice Gets a list of all supported tokens which can be sent or received\n to/from a given chain id.\n @param chainSelector The chainSelector.\n @return tokens The addresses of all tokens that are supported."
            },
            "functionSelector": "fbca3b74",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSupportedTokens",
            "nameLocation": "782:18:37",
            "parameters": {
              "id": 43440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43439,
                  "mutability": "mutable",
                  "name": "chainSelector",
                  "nameLocation": "808:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43445,
                  "src": "801:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 43438,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:22:37"
            },
            "returnParameters": {
              "id": 43444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43443,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "863:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43445,
                  "src": "846:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43441,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "846:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 43442,
                    "nodeType": "ArrayTypeName",
                    "src": "846:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:25:37"
            },
            "scope": 43468,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43456,
            "nodeType": "FunctionDefinition",
            "src": "1180:135:37",
            "nodes": [],
            "documentation": {
              "id": 43446,
              "nodeType": "StructuredDocumentation",
              "src": "875:302:37",
              "text": "@param destinationChainSelector The destination chainSelector\n @param message The cross-chain CCIP message including data and/or tokens\n @return fee returns guaranteed execution fee for the specified message\n delivery to destination chain\n @dev returns 0 fee on invalid message."
            },
            "functionSelector": "20487ded",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nameLocation": "1189:6:37",
            "parameters": {
              "id": 43452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43448,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "1208:24:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43456,
                  "src": "1201:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 43447,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43451,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1267:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43456,
                  "src": "1238:36:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$43501_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 43450,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43449,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "1238:6:37",
                        "1245:14:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43501,
                      "src": "1238:21:37"
                    },
                    "referencedDeclaration": 43501,
                    "src": "1238:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$43501_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:83:37"
            },
            "returnParameters": {
              "id": 43455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43454,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1310:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43456,
                  "src": "1302:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1301:13:37"
            },
            "scope": 43468,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43467,
            "nodeType": "FunctionDefinition",
            "src": "1691:138:37",
            "nodes": [],
            "documentation": {
              "id": 43457,
              "nodeType": "StructuredDocumentation",
              "src": "1319:369:37",
              "text": "@notice Request a message to be sent to the destination chain\n @param destinationChainSelector The destination chain ID\n @param message The cross-chain CCIP message including data and/or tokens\n @return messageId The message ID\n @dev Note if msg.value is larger than the required fee (from getFee) we accept\n the overpayment with no refund."
            },
            "functionSelector": "96f4e9f9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ccipSend",
            "nameLocation": "1700:8:37",
            "parameters": {
              "id": 43463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43459,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "1721:24:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43467,
                  "src": "1714:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 43458,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43462,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1782:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 43467,
                  "src": "1751:38:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$43501_calldata_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 43461,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43460,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "1751:6:37",
                        "1758:14:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43501,
                      "src": "1751:21:37"
                    },
                    "referencedDeclaration": 43501,
                    "src": "1751:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$43501_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:85:37"
            },
            "returnParameters": {
              "id": 43466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43467,
                  "src": "1820:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43464,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1819:9:37"
            },
            "scope": 43468,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRouterClient",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          43468
        ],
        "name": "IRouterClient",
        "nameLocation": "116:13:37",
        "scope": 43469,
        "usedErrors": [
          43424,
          43426,
          43428
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 37
}